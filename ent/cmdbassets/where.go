// Code generated by ent, DO NOT EDIT.

package cmdbassets

import (
	"time"

	"entgo.io/ent/dialect/sql"
	"github.com/liuzw3018/simple-admin-cmdb-rpc/ent/predicate"
)

// ID filters vertices based on their ID field.
func ID(id uint64) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id uint64) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id uint64) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...uint64) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...uint64) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id uint64) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id uint64) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id uint64) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id uint64) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldLTE(FieldID, id))
}

// CreatedAt applies equality check predicate on the "created_at" field. It's identical to CreatedAtEQ.
func CreatedAt(v time.Time) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldEQ(FieldCreatedAt, v))
}

// UpdatedAt applies equality check predicate on the "updated_at" field. It's identical to UpdatedAtEQ.
func UpdatedAt(v time.Time) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldEQ(FieldUpdatedAt, v))
}

// User applies equality check predicate on the "user" field. It's identical to UserEQ.
func User(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldEQ(FieldUser, v))
}

// Department applies equality check predicate on the "department" field. It's identical to DepartmentEQ.
func Department(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldEQ(FieldDepartment, v))
}

// Mobile applies equality check predicate on the "mobile" field. It's identical to MobileEQ.
func Mobile(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldEQ(FieldMobile, v))
}

// Remark applies equality check predicate on the "remark" field. It's identical to RemarkEQ.
func Remark(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldEQ(FieldRemark, v))
}

// IP applies equality check predicate on the "ip" field. It's identical to IPEQ.
func IP(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldEQ(FieldIP, v))
}

// Mask applies equality check predicate on the "mask" field. It's identical to MaskEQ.
func Mask(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldEQ(FieldMask, v))
}

// Gateway applies equality check predicate on the "gateway" field. It's identical to GatewayEQ.
func Gateway(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldEQ(FieldGateway, v))
}

// OnlineTime applies equality check predicate on the "online_time" field. It's identical to OnlineTimeEQ.
func OnlineTime(v time.Time) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldEQ(FieldOnlineTime, v))
}

// OfflineTime applies equality check predicate on the "offline_time" field. It's identical to OfflineTimeEQ.
func OfflineTime(v time.Time) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldEQ(FieldOfflineTime, v))
}

// PowerStatus applies equality check predicate on the "power_status" field. It's identical to PowerStatusEQ.
func PowerStatus(v uint) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldEQ(FieldPowerStatus, v))
}

// IsServer applies equality check predicate on the "is_server" field. It's identical to IsServerEQ.
func IsServer(v uint) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldEQ(FieldIsServer, v))
}

// ServerType applies equality check predicate on the "server_type" field. It's identical to ServerTypeEQ.
func ServerType(v uint) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldEQ(FieldServerType, v))
}

// ServerHostname applies equality check predicate on the "server_hostname" field. It's identical to ServerHostnameEQ.
func ServerHostname(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldEQ(FieldServerHostname, v))
}

// ServerOs applies equality check predicate on the "server_os" field. It's identical to ServerOsEQ.
func ServerOs(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldEQ(FieldServerOs, v))
}

// ServerOsVersion applies equality check predicate on the "server_os_version" field. It's identical to ServerOsVersionEQ.
func ServerOsVersion(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldEQ(FieldServerOsVersion, v))
}

// ServerOsArch applies equality check predicate on the "server_os_arch" field. It's identical to ServerOsArchEQ.
func ServerOsArch(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldEQ(FieldServerOsArch, v))
}

// CPU applies equality check predicate on the "cpu" field. It's identical to CPUEQ.
func CPU(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldEQ(FieldCPU, v))
}

// Memory applies equality check predicate on the "memory" field. It's identical to MemoryEQ.
func Memory(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldEQ(FieldMemory, v))
}

// Disk applies equality check predicate on the "disk" field. It's identical to DiskEQ.
func Disk(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldEQ(FieldDisk, v))
}

// NetworkSpeed applies equality check predicate on the "NetworkSpeed" field. It's identical to NetworkSpeedEQ.
func NetworkSpeed(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldEQ(FieldNetworkSpeed, v))
}

// DeviceAddress applies equality check predicate on the "device_address" field. It's identical to DeviceAddressEQ.
func DeviceAddress(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldEQ(FieldDeviceAddress, v))
}

// CreatedAtEQ applies the EQ predicate on the "created_at" field.
func CreatedAtEQ(v time.Time) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "created_at" field.
func CreatedAtNEQ(v time.Time) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "created_at" field.
func CreatedAtIn(vs ...time.Time) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "created_at" field.
func CreatedAtNotIn(vs ...time.Time) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "created_at" field.
func CreatedAtGT(v time.Time) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "created_at" field.
func CreatedAtGTE(v time.Time) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "created_at" field.
func CreatedAtLT(v time.Time) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "created_at" field.
func CreatedAtLTE(v time.Time) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldLTE(FieldCreatedAt, v))
}

// UpdatedAtEQ applies the EQ predicate on the "updated_at" field.
func UpdatedAtEQ(v time.Time) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldEQ(FieldUpdatedAt, v))
}

// UpdatedAtNEQ applies the NEQ predicate on the "updated_at" field.
func UpdatedAtNEQ(v time.Time) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldNEQ(FieldUpdatedAt, v))
}

// UpdatedAtIn applies the In predicate on the "updated_at" field.
func UpdatedAtIn(vs ...time.Time) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldIn(FieldUpdatedAt, vs...))
}

// UpdatedAtNotIn applies the NotIn predicate on the "updated_at" field.
func UpdatedAtNotIn(vs ...time.Time) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldNotIn(FieldUpdatedAt, vs...))
}

// UpdatedAtGT applies the GT predicate on the "updated_at" field.
func UpdatedAtGT(v time.Time) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldGT(FieldUpdatedAt, v))
}

// UpdatedAtGTE applies the GTE predicate on the "updated_at" field.
func UpdatedAtGTE(v time.Time) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldGTE(FieldUpdatedAt, v))
}

// UpdatedAtLT applies the LT predicate on the "updated_at" field.
func UpdatedAtLT(v time.Time) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldLT(FieldUpdatedAt, v))
}

// UpdatedAtLTE applies the LTE predicate on the "updated_at" field.
func UpdatedAtLTE(v time.Time) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldLTE(FieldUpdatedAt, v))
}

// UserEQ applies the EQ predicate on the "user" field.
func UserEQ(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldEQ(FieldUser, v))
}

// UserNEQ applies the NEQ predicate on the "user" field.
func UserNEQ(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldNEQ(FieldUser, v))
}

// UserIn applies the In predicate on the "user" field.
func UserIn(vs ...string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldIn(FieldUser, vs...))
}

// UserNotIn applies the NotIn predicate on the "user" field.
func UserNotIn(vs ...string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldNotIn(FieldUser, vs...))
}

// UserGT applies the GT predicate on the "user" field.
func UserGT(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldGT(FieldUser, v))
}

// UserGTE applies the GTE predicate on the "user" field.
func UserGTE(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldGTE(FieldUser, v))
}

// UserLT applies the LT predicate on the "user" field.
func UserLT(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldLT(FieldUser, v))
}

// UserLTE applies the LTE predicate on the "user" field.
func UserLTE(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldLTE(FieldUser, v))
}

// UserContains applies the Contains predicate on the "user" field.
func UserContains(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldContains(FieldUser, v))
}

// UserHasPrefix applies the HasPrefix predicate on the "user" field.
func UserHasPrefix(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldHasPrefix(FieldUser, v))
}

// UserHasSuffix applies the HasSuffix predicate on the "user" field.
func UserHasSuffix(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldHasSuffix(FieldUser, v))
}

// UserEqualFold applies the EqualFold predicate on the "user" field.
func UserEqualFold(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldEqualFold(FieldUser, v))
}

// UserContainsFold applies the ContainsFold predicate on the "user" field.
func UserContainsFold(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldContainsFold(FieldUser, v))
}

// DepartmentEQ applies the EQ predicate on the "department" field.
func DepartmentEQ(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldEQ(FieldDepartment, v))
}

// DepartmentNEQ applies the NEQ predicate on the "department" field.
func DepartmentNEQ(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldNEQ(FieldDepartment, v))
}

// DepartmentIn applies the In predicate on the "department" field.
func DepartmentIn(vs ...string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldIn(FieldDepartment, vs...))
}

// DepartmentNotIn applies the NotIn predicate on the "department" field.
func DepartmentNotIn(vs ...string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldNotIn(FieldDepartment, vs...))
}

// DepartmentGT applies the GT predicate on the "department" field.
func DepartmentGT(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldGT(FieldDepartment, v))
}

// DepartmentGTE applies the GTE predicate on the "department" field.
func DepartmentGTE(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldGTE(FieldDepartment, v))
}

// DepartmentLT applies the LT predicate on the "department" field.
func DepartmentLT(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldLT(FieldDepartment, v))
}

// DepartmentLTE applies the LTE predicate on the "department" field.
func DepartmentLTE(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldLTE(FieldDepartment, v))
}

// DepartmentContains applies the Contains predicate on the "department" field.
func DepartmentContains(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldContains(FieldDepartment, v))
}

// DepartmentHasPrefix applies the HasPrefix predicate on the "department" field.
func DepartmentHasPrefix(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldHasPrefix(FieldDepartment, v))
}

// DepartmentHasSuffix applies the HasSuffix predicate on the "department" field.
func DepartmentHasSuffix(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldHasSuffix(FieldDepartment, v))
}

// DepartmentEqualFold applies the EqualFold predicate on the "department" field.
func DepartmentEqualFold(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldEqualFold(FieldDepartment, v))
}

// DepartmentContainsFold applies the ContainsFold predicate on the "department" field.
func DepartmentContainsFold(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldContainsFold(FieldDepartment, v))
}

// MobileEQ applies the EQ predicate on the "mobile" field.
func MobileEQ(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldEQ(FieldMobile, v))
}

// MobileNEQ applies the NEQ predicate on the "mobile" field.
func MobileNEQ(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldNEQ(FieldMobile, v))
}

// MobileIn applies the In predicate on the "mobile" field.
func MobileIn(vs ...string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldIn(FieldMobile, vs...))
}

// MobileNotIn applies the NotIn predicate on the "mobile" field.
func MobileNotIn(vs ...string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldNotIn(FieldMobile, vs...))
}

// MobileGT applies the GT predicate on the "mobile" field.
func MobileGT(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldGT(FieldMobile, v))
}

// MobileGTE applies the GTE predicate on the "mobile" field.
func MobileGTE(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldGTE(FieldMobile, v))
}

// MobileLT applies the LT predicate on the "mobile" field.
func MobileLT(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldLT(FieldMobile, v))
}

// MobileLTE applies the LTE predicate on the "mobile" field.
func MobileLTE(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldLTE(FieldMobile, v))
}

// MobileContains applies the Contains predicate on the "mobile" field.
func MobileContains(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldContains(FieldMobile, v))
}

// MobileHasPrefix applies the HasPrefix predicate on the "mobile" field.
func MobileHasPrefix(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldHasPrefix(FieldMobile, v))
}

// MobileHasSuffix applies the HasSuffix predicate on the "mobile" field.
func MobileHasSuffix(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldHasSuffix(FieldMobile, v))
}

// MobileEqualFold applies the EqualFold predicate on the "mobile" field.
func MobileEqualFold(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldEqualFold(FieldMobile, v))
}

// MobileContainsFold applies the ContainsFold predicate on the "mobile" field.
func MobileContainsFold(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldContainsFold(FieldMobile, v))
}

// RemarkEQ applies the EQ predicate on the "remark" field.
func RemarkEQ(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldEQ(FieldRemark, v))
}

// RemarkNEQ applies the NEQ predicate on the "remark" field.
func RemarkNEQ(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldNEQ(FieldRemark, v))
}

// RemarkIn applies the In predicate on the "remark" field.
func RemarkIn(vs ...string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldIn(FieldRemark, vs...))
}

// RemarkNotIn applies the NotIn predicate on the "remark" field.
func RemarkNotIn(vs ...string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldNotIn(FieldRemark, vs...))
}

// RemarkGT applies the GT predicate on the "remark" field.
func RemarkGT(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldGT(FieldRemark, v))
}

// RemarkGTE applies the GTE predicate on the "remark" field.
func RemarkGTE(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldGTE(FieldRemark, v))
}

// RemarkLT applies the LT predicate on the "remark" field.
func RemarkLT(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldLT(FieldRemark, v))
}

// RemarkLTE applies the LTE predicate on the "remark" field.
func RemarkLTE(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldLTE(FieldRemark, v))
}

// RemarkContains applies the Contains predicate on the "remark" field.
func RemarkContains(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldContains(FieldRemark, v))
}

// RemarkHasPrefix applies the HasPrefix predicate on the "remark" field.
func RemarkHasPrefix(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldHasPrefix(FieldRemark, v))
}

// RemarkHasSuffix applies the HasSuffix predicate on the "remark" field.
func RemarkHasSuffix(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldHasSuffix(FieldRemark, v))
}

// RemarkEqualFold applies the EqualFold predicate on the "remark" field.
func RemarkEqualFold(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldEqualFold(FieldRemark, v))
}

// RemarkContainsFold applies the ContainsFold predicate on the "remark" field.
func RemarkContainsFold(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldContainsFold(FieldRemark, v))
}

// IPEQ applies the EQ predicate on the "ip" field.
func IPEQ(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldEQ(FieldIP, v))
}

// IPNEQ applies the NEQ predicate on the "ip" field.
func IPNEQ(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldNEQ(FieldIP, v))
}

// IPIn applies the In predicate on the "ip" field.
func IPIn(vs ...string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldIn(FieldIP, vs...))
}

// IPNotIn applies the NotIn predicate on the "ip" field.
func IPNotIn(vs ...string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldNotIn(FieldIP, vs...))
}

// IPGT applies the GT predicate on the "ip" field.
func IPGT(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldGT(FieldIP, v))
}

// IPGTE applies the GTE predicate on the "ip" field.
func IPGTE(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldGTE(FieldIP, v))
}

// IPLT applies the LT predicate on the "ip" field.
func IPLT(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldLT(FieldIP, v))
}

// IPLTE applies the LTE predicate on the "ip" field.
func IPLTE(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldLTE(FieldIP, v))
}

// IPContains applies the Contains predicate on the "ip" field.
func IPContains(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldContains(FieldIP, v))
}

// IPHasPrefix applies the HasPrefix predicate on the "ip" field.
func IPHasPrefix(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldHasPrefix(FieldIP, v))
}

// IPHasSuffix applies the HasSuffix predicate on the "ip" field.
func IPHasSuffix(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldHasSuffix(FieldIP, v))
}

// IPEqualFold applies the EqualFold predicate on the "ip" field.
func IPEqualFold(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldEqualFold(FieldIP, v))
}

// IPContainsFold applies the ContainsFold predicate on the "ip" field.
func IPContainsFold(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldContainsFold(FieldIP, v))
}

// MaskEQ applies the EQ predicate on the "mask" field.
func MaskEQ(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldEQ(FieldMask, v))
}

// MaskNEQ applies the NEQ predicate on the "mask" field.
func MaskNEQ(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldNEQ(FieldMask, v))
}

// MaskIn applies the In predicate on the "mask" field.
func MaskIn(vs ...string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldIn(FieldMask, vs...))
}

// MaskNotIn applies the NotIn predicate on the "mask" field.
func MaskNotIn(vs ...string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldNotIn(FieldMask, vs...))
}

// MaskGT applies the GT predicate on the "mask" field.
func MaskGT(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldGT(FieldMask, v))
}

// MaskGTE applies the GTE predicate on the "mask" field.
func MaskGTE(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldGTE(FieldMask, v))
}

// MaskLT applies the LT predicate on the "mask" field.
func MaskLT(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldLT(FieldMask, v))
}

// MaskLTE applies the LTE predicate on the "mask" field.
func MaskLTE(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldLTE(FieldMask, v))
}

// MaskContains applies the Contains predicate on the "mask" field.
func MaskContains(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldContains(FieldMask, v))
}

// MaskHasPrefix applies the HasPrefix predicate on the "mask" field.
func MaskHasPrefix(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldHasPrefix(FieldMask, v))
}

// MaskHasSuffix applies the HasSuffix predicate on the "mask" field.
func MaskHasSuffix(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldHasSuffix(FieldMask, v))
}

// MaskEqualFold applies the EqualFold predicate on the "mask" field.
func MaskEqualFold(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldEqualFold(FieldMask, v))
}

// MaskContainsFold applies the ContainsFold predicate on the "mask" field.
func MaskContainsFold(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldContainsFold(FieldMask, v))
}

// GatewayEQ applies the EQ predicate on the "gateway" field.
func GatewayEQ(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldEQ(FieldGateway, v))
}

// GatewayNEQ applies the NEQ predicate on the "gateway" field.
func GatewayNEQ(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldNEQ(FieldGateway, v))
}

// GatewayIn applies the In predicate on the "gateway" field.
func GatewayIn(vs ...string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldIn(FieldGateway, vs...))
}

// GatewayNotIn applies the NotIn predicate on the "gateway" field.
func GatewayNotIn(vs ...string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldNotIn(FieldGateway, vs...))
}

// GatewayGT applies the GT predicate on the "gateway" field.
func GatewayGT(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldGT(FieldGateway, v))
}

// GatewayGTE applies the GTE predicate on the "gateway" field.
func GatewayGTE(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldGTE(FieldGateway, v))
}

// GatewayLT applies the LT predicate on the "gateway" field.
func GatewayLT(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldLT(FieldGateway, v))
}

// GatewayLTE applies the LTE predicate on the "gateway" field.
func GatewayLTE(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldLTE(FieldGateway, v))
}

// GatewayContains applies the Contains predicate on the "gateway" field.
func GatewayContains(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldContains(FieldGateway, v))
}

// GatewayHasPrefix applies the HasPrefix predicate on the "gateway" field.
func GatewayHasPrefix(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldHasPrefix(FieldGateway, v))
}

// GatewayHasSuffix applies the HasSuffix predicate on the "gateway" field.
func GatewayHasSuffix(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldHasSuffix(FieldGateway, v))
}

// GatewayEqualFold applies the EqualFold predicate on the "gateway" field.
func GatewayEqualFold(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldEqualFold(FieldGateway, v))
}

// GatewayContainsFold applies the ContainsFold predicate on the "gateway" field.
func GatewayContainsFold(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldContainsFold(FieldGateway, v))
}

// OnlineTimeEQ applies the EQ predicate on the "online_time" field.
func OnlineTimeEQ(v time.Time) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldEQ(FieldOnlineTime, v))
}

// OnlineTimeNEQ applies the NEQ predicate on the "online_time" field.
func OnlineTimeNEQ(v time.Time) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldNEQ(FieldOnlineTime, v))
}

// OnlineTimeIn applies the In predicate on the "online_time" field.
func OnlineTimeIn(vs ...time.Time) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldIn(FieldOnlineTime, vs...))
}

// OnlineTimeNotIn applies the NotIn predicate on the "online_time" field.
func OnlineTimeNotIn(vs ...time.Time) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldNotIn(FieldOnlineTime, vs...))
}

// OnlineTimeGT applies the GT predicate on the "online_time" field.
func OnlineTimeGT(v time.Time) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldGT(FieldOnlineTime, v))
}

// OnlineTimeGTE applies the GTE predicate on the "online_time" field.
func OnlineTimeGTE(v time.Time) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldGTE(FieldOnlineTime, v))
}

// OnlineTimeLT applies the LT predicate on the "online_time" field.
func OnlineTimeLT(v time.Time) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldLT(FieldOnlineTime, v))
}

// OnlineTimeLTE applies the LTE predicate on the "online_time" field.
func OnlineTimeLTE(v time.Time) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldLTE(FieldOnlineTime, v))
}

// OfflineTimeEQ applies the EQ predicate on the "offline_time" field.
func OfflineTimeEQ(v time.Time) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldEQ(FieldOfflineTime, v))
}

// OfflineTimeNEQ applies the NEQ predicate on the "offline_time" field.
func OfflineTimeNEQ(v time.Time) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldNEQ(FieldOfflineTime, v))
}

// OfflineTimeIn applies the In predicate on the "offline_time" field.
func OfflineTimeIn(vs ...time.Time) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldIn(FieldOfflineTime, vs...))
}

// OfflineTimeNotIn applies the NotIn predicate on the "offline_time" field.
func OfflineTimeNotIn(vs ...time.Time) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldNotIn(FieldOfflineTime, vs...))
}

// OfflineTimeGT applies the GT predicate on the "offline_time" field.
func OfflineTimeGT(v time.Time) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldGT(FieldOfflineTime, v))
}

// OfflineTimeGTE applies the GTE predicate on the "offline_time" field.
func OfflineTimeGTE(v time.Time) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldGTE(FieldOfflineTime, v))
}

// OfflineTimeLT applies the LT predicate on the "offline_time" field.
func OfflineTimeLT(v time.Time) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldLT(FieldOfflineTime, v))
}

// OfflineTimeLTE applies the LTE predicate on the "offline_time" field.
func OfflineTimeLTE(v time.Time) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldLTE(FieldOfflineTime, v))
}

// PowerStatusEQ applies the EQ predicate on the "power_status" field.
func PowerStatusEQ(v uint) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldEQ(FieldPowerStatus, v))
}

// PowerStatusNEQ applies the NEQ predicate on the "power_status" field.
func PowerStatusNEQ(v uint) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldNEQ(FieldPowerStatus, v))
}

// PowerStatusIn applies the In predicate on the "power_status" field.
func PowerStatusIn(vs ...uint) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldIn(FieldPowerStatus, vs...))
}

// PowerStatusNotIn applies the NotIn predicate on the "power_status" field.
func PowerStatusNotIn(vs ...uint) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldNotIn(FieldPowerStatus, vs...))
}

// PowerStatusGT applies the GT predicate on the "power_status" field.
func PowerStatusGT(v uint) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldGT(FieldPowerStatus, v))
}

// PowerStatusGTE applies the GTE predicate on the "power_status" field.
func PowerStatusGTE(v uint) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldGTE(FieldPowerStatus, v))
}

// PowerStatusLT applies the LT predicate on the "power_status" field.
func PowerStatusLT(v uint) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldLT(FieldPowerStatus, v))
}

// PowerStatusLTE applies the LTE predicate on the "power_status" field.
func PowerStatusLTE(v uint) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldLTE(FieldPowerStatus, v))
}

// IsServerEQ applies the EQ predicate on the "is_server" field.
func IsServerEQ(v uint) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldEQ(FieldIsServer, v))
}

// IsServerNEQ applies the NEQ predicate on the "is_server" field.
func IsServerNEQ(v uint) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldNEQ(FieldIsServer, v))
}

// IsServerIn applies the In predicate on the "is_server" field.
func IsServerIn(vs ...uint) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldIn(FieldIsServer, vs...))
}

// IsServerNotIn applies the NotIn predicate on the "is_server" field.
func IsServerNotIn(vs ...uint) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldNotIn(FieldIsServer, vs...))
}

// IsServerGT applies the GT predicate on the "is_server" field.
func IsServerGT(v uint) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldGT(FieldIsServer, v))
}

// IsServerGTE applies the GTE predicate on the "is_server" field.
func IsServerGTE(v uint) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldGTE(FieldIsServer, v))
}

// IsServerLT applies the LT predicate on the "is_server" field.
func IsServerLT(v uint) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldLT(FieldIsServer, v))
}

// IsServerLTE applies the LTE predicate on the "is_server" field.
func IsServerLTE(v uint) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldLTE(FieldIsServer, v))
}

// ServerTypeEQ applies the EQ predicate on the "server_type" field.
func ServerTypeEQ(v uint) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldEQ(FieldServerType, v))
}

// ServerTypeNEQ applies the NEQ predicate on the "server_type" field.
func ServerTypeNEQ(v uint) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldNEQ(FieldServerType, v))
}

// ServerTypeIn applies the In predicate on the "server_type" field.
func ServerTypeIn(vs ...uint) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldIn(FieldServerType, vs...))
}

// ServerTypeNotIn applies the NotIn predicate on the "server_type" field.
func ServerTypeNotIn(vs ...uint) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldNotIn(FieldServerType, vs...))
}

// ServerTypeGT applies the GT predicate on the "server_type" field.
func ServerTypeGT(v uint) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldGT(FieldServerType, v))
}

// ServerTypeGTE applies the GTE predicate on the "server_type" field.
func ServerTypeGTE(v uint) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldGTE(FieldServerType, v))
}

// ServerTypeLT applies the LT predicate on the "server_type" field.
func ServerTypeLT(v uint) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldLT(FieldServerType, v))
}

// ServerTypeLTE applies the LTE predicate on the "server_type" field.
func ServerTypeLTE(v uint) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldLTE(FieldServerType, v))
}

// ServerHostnameEQ applies the EQ predicate on the "server_hostname" field.
func ServerHostnameEQ(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldEQ(FieldServerHostname, v))
}

// ServerHostnameNEQ applies the NEQ predicate on the "server_hostname" field.
func ServerHostnameNEQ(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldNEQ(FieldServerHostname, v))
}

// ServerHostnameIn applies the In predicate on the "server_hostname" field.
func ServerHostnameIn(vs ...string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldIn(FieldServerHostname, vs...))
}

// ServerHostnameNotIn applies the NotIn predicate on the "server_hostname" field.
func ServerHostnameNotIn(vs ...string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldNotIn(FieldServerHostname, vs...))
}

// ServerHostnameGT applies the GT predicate on the "server_hostname" field.
func ServerHostnameGT(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldGT(FieldServerHostname, v))
}

// ServerHostnameGTE applies the GTE predicate on the "server_hostname" field.
func ServerHostnameGTE(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldGTE(FieldServerHostname, v))
}

// ServerHostnameLT applies the LT predicate on the "server_hostname" field.
func ServerHostnameLT(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldLT(FieldServerHostname, v))
}

// ServerHostnameLTE applies the LTE predicate on the "server_hostname" field.
func ServerHostnameLTE(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldLTE(FieldServerHostname, v))
}

// ServerHostnameContains applies the Contains predicate on the "server_hostname" field.
func ServerHostnameContains(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldContains(FieldServerHostname, v))
}

// ServerHostnameHasPrefix applies the HasPrefix predicate on the "server_hostname" field.
func ServerHostnameHasPrefix(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldHasPrefix(FieldServerHostname, v))
}

// ServerHostnameHasSuffix applies the HasSuffix predicate on the "server_hostname" field.
func ServerHostnameHasSuffix(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldHasSuffix(FieldServerHostname, v))
}

// ServerHostnameEqualFold applies the EqualFold predicate on the "server_hostname" field.
func ServerHostnameEqualFold(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldEqualFold(FieldServerHostname, v))
}

// ServerHostnameContainsFold applies the ContainsFold predicate on the "server_hostname" field.
func ServerHostnameContainsFold(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldContainsFold(FieldServerHostname, v))
}

// ServerOsEQ applies the EQ predicate on the "server_os" field.
func ServerOsEQ(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldEQ(FieldServerOs, v))
}

// ServerOsNEQ applies the NEQ predicate on the "server_os" field.
func ServerOsNEQ(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldNEQ(FieldServerOs, v))
}

// ServerOsIn applies the In predicate on the "server_os" field.
func ServerOsIn(vs ...string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldIn(FieldServerOs, vs...))
}

// ServerOsNotIn applies the NotIn predicate on the "server_os" field.
func ServerOsNotIn(vs ...string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldNotIn(FieldServerOs, vs...))
}

// ServerOsGT applies the GT predicate on the "server_os" field.
func ServerOsGT(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldGT(FieldServerOs, v))
}

// ServerOsGTE applies the GTE predicate on the "server_os" field.
func ServerOsGTE(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldGTE(FieldServerOs, v))
}

// ServerOsLT applies the LT predicate on the "server_os" field.
func ServerOsLT(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldLT(FieldServerOs, v))
}

// ServerOsLTE applies the LTE predicate on the "server_os" field.
func ServerOsLTE(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldLTE(FieldServerOs, v))
}

// ServerOsContains applies the Contains predicate on the "server_os" field.
func ServerOsContains(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldContains(FieldServerOs, v))
}

// ServerOsHasPrefix applies the HasPrefix predicate on the "server_os" field.
func ServerOsHasPrefix(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldHasPrefix(FieldServerOs, v))
}

// ServerOsHasSuffix applies the HasSuffix predicate on the "server_os" field.
func ServerOsHasSuffix(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldHasSuffix(FieldServerOs, v))
}

// ServerOsEqualFold applies the EqualFold predicate on the "server_os" field.
func ServerOsEqualFold(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldEqualFold(FieldServerOs, v))
}

// ServerOsContainsFold applies the ContainsFold predicate on the "server_os" field.
func ServerOsContainsFold(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldContainsFold(FieldServerOs, v))
}

// ServerOsVersionEQ applies the EQ predicate on the "server_os_version" field.
func ServerOsVersionEQ(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldEQ(FieldServerOsVersion, v))
}

// ServerOsVersionNEQ applies the NEQ predicate on the "server_os_version" field.
func ServerOsVersionNEQ(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldNEQ(FieldServerOsVersion, v))
}

// ServerOsVersionIn applies the In predicate on the "server_os_version" field.
func ServerOsVersionIn(vs ...string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldIn(FieldServerOsVersion, vs...))
}

// ServerOsVersionNotIn applies the NotIn predicate on the "server_os_version" field.
func ServerOsVersionNotIn(vs ...string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldNotIn(FieldServerOsVersion, vs...))
}

// ServerOsVersionGT applies the GT predicate on the "server_os_version" field.
func ServerOsVersionGT(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldGT(FieldServerOsVersion, v))
}

// ServerOsVersionGTE applies the GTE predicate on the "server_os_version" field.
func ServerOsVersionGTE(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldGTE(FieldServerOsVersion, v))
}

// ServerOsVersionLT applies the LT predicate on the "server_os_version" field.
func ServerOsVersionLT(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldLT(FieldServerOsVersion, v))
}

// ServerOsVersionLTE applies the LTE predicate on the "server_os_version" field.
func ServerOsVersionLTE(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldLTE(FieldServerOsVersion, v))
}

// ServerOsVersionContains applies the Contains predicate on the "server_os_version" field.
func ServerOsVersionContains(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldContains(FieldServerOsVersion, v))
}

// ServerOsVersionHasPrefix applies the HasPrefix predicate on the "server_os_version" field.
func ServerOsVersionHasPrefix(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldHasPrefix(FieldServerOsVersion, v))
}

// ServerOsVersionHasSuffix applies the HasSuffix predicate on the "server_os_version" field.
func ServerOsVersionHasSuffix(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldHasSuffix(FieldServerOsVersion, v))
}

// ServerOsVersionEqualFold applies the EqualFold predicate on the "server_os_version" field.
func ServerOsVersionEqualFold(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldEqualFold(FieldServerOsVersion, v))
}

// ServerOsVersionContainsFold applies the ContainsFold predicate on the "server_os_version" field.
func ServerOsVersionContainsFold(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldContainsFold(FieldServerOsVersion, v))
}

// ServerOsArchEQ applies the EQ predicate on the "server_os_arch" field.
func ServerOsArchEQ(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldEQ(FieldServerOsArch, v))
}

// ServerOsArchNEQ applies the NEQ predicate on the "server_os_arch" field.
func ServerOsArchNEQ(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldNEQ(FieldServerOsArch, v))
}

// ServerOsArchIn applies the In predicate on the "server_os_arch" field.
func ServerOsArchIn(vs ...string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldIn(FieldServerOsArch, vs...))
}

// ServerOsArchNotIn applies the NotIn predicate on the "server_os_arch" field.
func ServerOsArchNotIn(vs ...string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldNotIn(FieldServerOsArch, vs...))
}

// ServerOsArchGT applies the GT predicate on the "server_os_arch" field.
func ServerOsArchGT(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldGT(FieldServerOsArch, v))
}

// ServerOsArchGTE applies the GTE predicate on the "server_os_arch" field.
func ServerOsArchGTE(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldGTE(FieldServerOsArch, v))
}

// ServerOsArchLT applies the LT predicate on the "server_os_arch" field.
func ServerOsArchLT(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldLT(FieldServerOsArch, v))
}

// ServerOsArchLTE applies the LTE predicate on the "server_os_arch" field.
func ServerOsArchLTE(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldLTE(FieldServerOsArch, v))
}

// ServerOsArchContains applies the Contains predicate on the "server_os_arch" field.
func ServerOsArchContains(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldContains(FieldServerOsArch, v))
}

// ServerOsArchHasPrefix applies the HasPrefix predicate on the "server_os_arch" field.
func ServerOsArchHasPrefix(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldHasPrefix(FieldServerOsArch, v))
}

// ServerOsArchHasSuffix applies the HasSuffix predicate on the "server_os_arch" field.
func ServerOsArchHasSuffix(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldHasSuffix(FieldServerOsArch, v))
}

// ServerOsArchEqualFold applies the EqualFold predicate on the "server_os_arch" field.
func ServerOsArchEqualFold(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldEqualFold(FieldServerOsArch, v))
}

// ServerOsArchContainsFold applies the ContainsFold predicate on the "server_os_arch" field.
func ServerOsArchContainsFold(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldContainsFold(FieldServerOsArch, v))
}

// CPUEQ applies the EQ predicate on the "cpu" field.
func CPUEQ(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldEQ(FieldCPU, v))
}

// CPUNEQ applies the NEQ predicate on the "cpu" field.
func CPUNEQ(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldNEQ(FieldCPU, v))
}

// CPUIn applies the In predicate on the "cpu" field.
func CPUIn(vs ...string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldIn(FieldCPU, vs...))
}

// CPUNotIn applies the NotIn predicate on the "cpu" field.
func CPUNotIn(vs ...string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldNotIn(FieldCPU, vs...))
}

// CPUGT applies the GT predicate on the "cpu" field.
func CPUGT(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldGT(FieldCPU, v))
}

// CPUGTE applies the GTE predicate on the "cpu" field.
func CPUGTE(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldGTE(FieldCPU, v))
}

// CPULT applies the LT predicate on the "cpu" field.
func CPULT(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldLT(FieldCPU, v))
}

// CPULTE applies the LTE predicate on the "cpu" field.
func CPULTE(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldLTE(FieldCPU, v))
}

// CPUContains applies the Contains predicate on the "cpu" field.
func CPUContains(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldContains(FieldCPU, v))
}

// CPUHasPrefix applies the HasPrefix predicate on the "cpu" field.
func CPUHasPrefix(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldHasPrefix(FieldCPU, v))
}

// CPUHasSuffix applies the HasSuffix predicate on the "cpu" field.
func CPUHasSuffix(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldHasSuffix(FieldCPU, v))
}

// CPUEqualFold applies the EqualFold predicate on the "cpu" field.
func CPUEqualFold(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldEqualFold(FieldCPU, v))
}

// CPUContainsFold applies the ContainsFold predicate on the "cpu" field.
func CPUContainsFold(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldContainsFold(FieldCPU, v))
}

// MemoryEQ applies the EQ predicate on the "memory" field.
func MemoryEQ(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldEQ(FieldMemory, v))
}

// MemoryNEQ applies the NEQ predicate on the "memory" field.
func MemoryNEQ(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldNEQ(FieldMemory, v))
}

// MemoryIn applies the In predicate on the "memory" field.
func MemoryIn(vs ...string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldIn(FieldMemory, vs...))
}

// MemoryNotIn applies the NotIn predicate on the "memory" field.
func MemoryNotIn(vs ...string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldNotIn(FieldMemory, vs...))
}

// MemoryGT applies the GT predicate on the "memory" field.
func MemoryGT(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldGT(FieldMemory, v))
}

// MemoryGTE applies the GTE predicate on the "memory" field.
func MemoryGTE(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldGTE(FieldMemory, v))
}

// MemoryLT applies the LT predicate on the "memory" field.
func MemoryLT(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldLT(FieldMemory, v))
}

// MemoryLTE applies the LTE predicate on the "memory" field.
func MemoryLTE(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldLTE(FieldMemory, v))
}

// MemoryContains applies the Contains predicate on the "memory" field.
func MemoryContains(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldContains(FieldMemory, v))
}

// MemoryHasPrefix applies the HasPrefix predicate on the "memory" field.
func MemoryHasPrefix(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldHasPrefix(FieldMemory, v))
}

// MemoryHasSuffix applies the HasSuffix predicate on the "memory" field.
func MemoryHasSuffix(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldHasSuffix(FieldMemory, v))
}

// MemoryEqualFold applies the EqualFold predicate on the "memory" field.
func MemoryEqualFold(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldEqualFold(FieldMemory, v))
}

// MemoryContainsFold applies the ContainsFold predicate on the "memory" field.
func MemoryContainsFold(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldContainsFold(FieldMemory, v))
}

// DiskEQ applies the EQ predicate on the "disk" field.
func DiskEQ(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldEQ(FieldDisk, v))
}

// DiskNEQ applies the NEQ predicate on the "disk" field.
func DiskNEQ(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldNEQ(FieldDisk, v))
}

// DiskIn applies the In predicate on the "disk" field.
func DiskIn(vs ...string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldIn(FieldDisk, vs...))
}

// DiskNotIn applies the NotIn predicate on the "disk" field.
func DiskNotIn(vs ...string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldNotIn(FieldDisk, vs...))
}

// DiskGT applies the GT predicate on the "disk" field.
func DiskGT(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldGT(FieldDisk, v))
}

// DiskGTE applies the GTE predicate on the "disk" field.
func DiskGTE(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldGTE(FieldDisk, v))
}

// DiskLT applies the LT predicate on the "disk" field.
func DiskLT(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldLT(FieldDisk, v))
}

// DiskLTE applies the LTE predicate on the "disk" field.
func DiskLTE(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldLTE(FieldDisk, v))
}

// DiskContains applies the Contains predicate on the "disk" field.
func DiskContains(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldContains(FieldDisk, v))
}

// DiskHasPrefix applies the HasPrefix predicate on the "disk" field.
func DiskHasPrefix(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldHasPrefix(FieldDisk, v))
}

// DiskHasSuffix applies the HasSuffix predicate on the "disk" field.
func DiskHasSuffix(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldHasSuffix(FieldDisk, v))
}

// DiskEqualFold applies the EqualFold predicate on the "disk" field.
func DiskEqualFold(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldEqualFold(FieldDisk, v))
}

// DiskContainsFold applies the ContainsFold predicate on the "disk" field.
func DiskContainsFold(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldContainsFold(FieldDisk, v))
}

// NetworkSpeedEQ applies the EQ predicate on the "NetworkSpeed" field.
func NetworkSpeedEQ(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldEQ(FieldNetworkSpeed, v))
}

// NetworkSpeedNEQ applies the NEQ predicate on the "NetworkSpeed" field.
func NetworkSpeedNEQ(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldNEQ(FieldNetworkSpeed, v))
}

// NetworkSpeedIn applies the In predicate on the "NetworkSpeed" field.
func NetworkSpeedIn(vs ...string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldIn(FieldNetworkSpeed, vs...))
}

// NetworkSpeedNotIn applies the NotIn predicate on the "NetworkSpeed" field.
func NetworkSpeedNotIn(vs ...string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldNotIn(FieldNetworkSpeed, vs...))
}

// NetworkSpeedGT applies the GT predicate on the "NetworkSpeed" field.
func NetworkSpeedGT(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldGT(FieldNetworkSpeed, v))
}

// NetworkSpeedGTE applies the GTE predicate on the "NetworkSpeed" field.
func NetworkSpeedGTE(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldGTE(FieldNetworkSpeed, v))
}

// NetworkSpeedLT applies the LT predicate on the "NetworkSpeed" field.
func NetworkSpeedLT(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldLT(FieldNetworkSpeed, v))
}

// NetworkSpeedLTE applies the LTE predicate on the "NetworkSpeed" field.
func NetworkSpeedLTE(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldLTE(FieldNetworkSpeed, v))
}

// NetworkSpeedContains applies the Contains predicate on the "NetworkSpeed" field.
func NetworkSpeedContains(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldContains(FieldNetworkSpeed, v))
}

// NetworkSpeedHasPrefix applies the HasPrefix predicate on the "NetworkSpeed" field.
func NetworkSpeedHasPrefix(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldHasPrefix(FieldNetworkSpeed, v))
}

// NetworkSpeedHasSuffix applies the HasSuffix predicate on the "NetworkSpeed" field.
func NetworkSpeedHasSuffix(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldHasSuffix(FieldNetworkSpeed, v))
}

// NetworkSpeedEqualFold applies the EqualFold predicate on the "NetworkSpeed" field.
func NetworkSpeedEqualFold(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldEqualFold(FieldNetworkSpeed, v))
}

// NetworkSpeedContainsFold applies the ContainsFold predicate on the "NetworkSpeed" field.
func NetworkSpeedContainsFold(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldContainsFold(FieldNetworkSpeed, v))
}

// DeviceAddressEQ applies the EQ predicate on the "device_address" field.
func DeviceAddressEQ(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldEQ(FieldDeviceAddress, v))
}

// DeviceAddressNEQ applies the NEQ predicate on the "device_address" field.
func DeviceAddressNEQ(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldNEQ(FieldDeviceAddress, v))
}

// DeviceAddressIn applies the In predicate on the "device_address" field.
func DeviceAddressIn(vs ...string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldIn(FieldDeviceAddress, vs...))
}

// DeviceAddressNotIn applies the NotIn predicate on the "device_address" field.
func DeviceAddressNotIn(vs ...string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldNotIn(FieldDeviceAddress, vs...))
}

// DeviceAddressGT applies the GT predicate on the "device_address" field.
func DeviceAddressGT(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldGT(FieldDeviceAddress, v))
}

// DeviceAddressGTE applies the GTE predicate on the "device_address" field.
func DeviceAddressGTE(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldGTE(FieldDeviceAddress, v))
}

// DeviceAddressLT applies the LT predicate on the "device_address" field.
func DeviceAddressLT(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldLT(FieldDeviceAddress, v))
}

// DeviceAddressLTE applies the LTE predicate on the "device_address" field.
func DeviceAddressLTE(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldLTE(FieldDeviceAddress, v))
}

// DeviceAddressContains applies the Contains predicate on the "device_address" field.
func DeviceAddressContains(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldContains(FieldDeviceAddress, v))
}

// DeviceAddressHasPrefix applies the HasPrefix predicate on the "device_address" field.
func DeviceAddressHasPrefix(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldHasPrefix(FieldDeviceAddress, v))
}

// DeviceAddressHasSuffix applies the HasSuffix predicate on the "device_address" field.
func DeviceAddressHasSuffix(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldHasSuffix(FieldDeviceAddress, v))
}

// DeviceAddressEqualFold applies the EqualFold predicate on the "device_address" field.
func DeviceAddressEqualFold(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldEqualFold(FieldDeviceAddress, v))
}

// DeviceAddressContainsFold applies the ContainsFold predicate on the "device_address" field.
func DeviceAddressContainsFold(v string) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.FieldContainsFold(FieldDeviceAddress, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.CmdbAssets) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.CmdbAssets) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.CmdbAssets) predicate.CmdbAssets {
	return predicate.CmdbAssets(sql.NotPredicates(p))
}
