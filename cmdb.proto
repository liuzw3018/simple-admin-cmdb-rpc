syntax = "proto3";

package cmdb;
option go_package="./cmdb";

message CmdbIpUserListResp {
  uint64 total = 1;
  repeated CmdbIpUserInfo data = 2;
}

message IDReq {
  uint64 id = 1;
}

message BaseResp {
  string msg = 1;
}

message CmdbAssetsInfo {
  optional uint64 id = 1;
  optional int64 created_at = 2;
  optional int64 updated_at = 3;
  //  用户
  optional string user = 4;
  //  部门
  optional string department = 5;
  //  联系方式
  optional string mobile = 6;
  //  备注
  optional string remark = 7;
  //  IP
  optional string ip = 8;
  //  掩码
  optional string mask = 9;
  //  网关
  optional string gateway = 10;
  //  上线时间
  optional int64 online_time = 11;
  //  下线时间
  optional int64 offline_time = 12;
  //  电源状态 | 1: 开机 | 0: 关机
  optional uint64 power_status = 13;
  //  是否服务器 | 1: 是 | 0: 否
  optional uint64 is_server = 14;
  //  服务器类型 | 1: 物理机 | 2: 虚拟机 | 3: 容器
  optional uint64 server_type = 15;
  //  服务器主机名
  optional string server_hostname = 16;
  //  服务器操作系统
  optional string server_os = 17;
  //  服务器操作系统版本
  optional string server_os_version = 18;
  //  服务器操作系统架构
  optional string server_os_arch = 19;
  //  cpu
  optional string cpu = 20;
  //  内存
  optional string memory = 21;
  //  硬盘
  optional string disk = 22;
  //  网卡速率 | 100M | 1G | 10G | 100G
  optional string network_speed = 23;
  //  设备位置
  optional string device_address = 24;
}

message CmdbIpInfo {
  optional uint64 id = 1;
  optional int64 created_at = 2;
  optional int64 updated_at = 3;
  //  用户
  optional string user = 4;
  //  部门
  optional string department = 5;
  //  联系方式
  optional string mobile = 6;
  //  备注
  optional string remark = 7;
  //  IP
  optional string ip = 8;
  //  掩码
  optional string mask = 9;
  //  网关
  optional string gateway = 10;
  //  上线时间
  optional int64 online_time = 11;
  //  下线时间
  optional int64 offline_time = 12;
  //  是否空闲 | 1: 空闲 | 0: 使用中
  optional uint64 is_leisure = 13;
  //  设备类型 | 服务器 | 网络设备 | 存储设备 | PC | 其他
  optional string device_type = 14;
}

message CmdbIpListResp {
  uint64 total = 1;
  repeated CmdbIpInfo data = 2;
}

message UUIDsReq {
  repeated string ids = 1;
}

//  base message
message Empty {}

message IDsReq {
  repeated uint64 ids = 1;
}

message BaseIDResp {
  uint64 id = 1;
  string msg = 2;
}

message CmdbIpUserInfo {
  optional uint64 id = 1;
  optional int64 created_at = 2;
  optional int64 updated_at = 3;
  //  Status 1: normal 2: ban | 状态 1 正常 2 禁用
  optional uint32 status = 4;
  //  用户
  optional string user = 5;
  //  部门
  optional string department = 6;
  //  联系方式
  optional string mobile = 7;
  //  备注
  optional string remark = 8;
}

message CmdbIpListReq {
  uint64 page = 1;
  uint64 page_size = 2;
  optional string user = 3;
  optional string department = 4;
  optional string mobile = 5;
}

message CmdbIpUserListReq {
  uint64 page = 1;
  uint64 page_size = 2;
  optional string user = 3;
  optional string department = 4;
  optional string mobile = 5;
}

message UUIDReq {
  string id = 1;
}

message PageInfoReq {
  uint64 page = 1;
  uint64 page_size = 2;
}

message BaseUUIDResp {
  string id = 1;
  string msg = 2;
}

message CmdbAssetsListResp {
  uint64 total = 1;
  repeated CmdbAssetsInfo data = 2;
}

message CmdbAssetsListReq {
  uint64 page = 1;
  uint64 page_size = 2;
  optional string user = 3;
  optional string department = 4;
  optional string mobile = 5;
}

service Cmdb {
  //  group: base
  rpc initDatabase(Empty) returns (BaseResp);
  //  CmdbAssets management
  //  group: assets
  rpc createCmdbAssets(CmdbAssetsInfo) returns (BaseIDResp);
  //  group: assets
  rpc updateCmdbAssets(CmdbAssetsInfo) returns (BaseResp);
  //  group: assets
  rpc getCmdbAssetsList(CmdbAssetsListReq) returns (CmdbAssetsListResp);
  //  group: assets
  rpc getCmdbAssetsById(IDReq) returns (CmdbAssetsInfo);
  //  group: assets
  rpc deleteCmdbAssets(IDsReq) returns (BaseResp);
  //  CmdbIp management
  //  group: ip
  rpc createCmdbIp(CmdbIpInfo) returns (BaseIDResp);
  //  group: ip
  rpc updateCmdbIp(CmdbIpInfo) returns (BaseResp);
  //  group: ip
  rpc getCmdbIpList(CmdbIpListReq) returns (CmdbIpListResp);
  //  group: ip
  rpc getCmdbIpById(IDReq) returns (CmdbIpInfo);
  //  group: ip
  rpc deleteCmdbIp(IDsReq) returns (BaseResp);
  //  CmdbIpUser management
  //  group: ipuser
  rpc createCmdbIpUser(CmdbIpUserInfo) returns (BaseIDResp);
  //  group: ipuser
  rpc updateCmdbIpUser(CmdbIpUserInfo) returns (BaseResp);
  //  group: ipuser
  rpc getCmdbIpUserList(CmdbIpUserListReq) returns (CmdbIpUserListResp);
  //  group: ipuser
  rpc getCmdbIpUserById(IDReq) returns (CmdbIpUserInfo);
  //  group: ipuser
  rpc deleteCmdbIpUser(IDsReq) returns (BaseResp);
}

